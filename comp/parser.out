Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DIVIDE
    FLOAT_TYPE
    MINUS
    PLUS
    TIMES

Grammar

Rule 0     S' -> program
Rule 1     program -> type ID LPAREN RPAREN LBRACE statements RBRACE
Rule 2     type -> INT
Rule 3     type -> FLOAT
Rule 4     statements -> statement
Rule 5     statements -> statement statements
Rule 6     statement -> assignment
Rule 7     statement -> return_statement
Rule 8     statement -> if_statement
Rule 9     assignment -> type ID EQUALS expression SEMICOLON
Rule 10    return_statement -> RETURN expression SEMICOLON
Rule 11    if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE
Rule 12    if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
Rule 13    expression -> ID
Rule 14    expression -> INTEGER
Rule 15    expression -> FLOAT
Rule 16    expression -> expression LT expression
Rule 17    expression -> expression LE expression
Rule 18    expression -> expression GT expression
Rule 19    expression -> expression GE expression
Rule 20    expression -> expression EQ expression
Rule 21    expression -> expression NE expression

Terminals, with rules where they appear

DIVIDE               : 
ELSE                 : 12
EQ                   : 20
EQUALS               : 9
FLOAT                : 3 15
FLOAT_TYPE           : 
GE                   : 19
GT                   : 18
ID                   : 1 9 13
IF                   : 11 12
INT                  : 2
INTEGER              : 14
LBRACE               : 1 11 12 12
LE                   : 17
LPAREN               : 1 11 12
LT                   : 16
MINUS                : 
NE                   : 21
PLUS                 : 
RBRACE               : 1 11 12 12
RETURN               : 10
RPAREN               : 1 11 12
SEMICOLON            : 9 10
TIMES                : 
error                : 

Nonterminals, with rules where they appear

assignment           : 6
expression           : 9 10 11 12 16 16 17 17 18 18 19 19 20 20 21 21
if_statement         : 8
program              : 0
return_statement     : 7
statement            : 4 5
statements           : 1 5 11 12 12
type                 : 1 9

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . type ID LPAREN RPAREN LBRACE statements RBRACE
    (2) type -> . INT
    (3) type -> . FLOAT

    INT             shift and go to state 3
    FLOAT           shift and go to state 4

    program                        shift and go to state 1
    type                           shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> type . ID LPAREN RPAREN LBRACE statements RBRACE

    ID              shift and go to state 5


state 3

    (2) type -> INT .

    ID              reduce using rule 2 (type -> INT .)


state 4

    (3) type -> FLOAT .

    ID              reduce using rule 3 (type -> FLOAT .)


state 5

    (1) program -> type ID . LPAREN RPAREN LBRACE statements RBRACE

    LPAREN          shift and go to state 6


state 6

    (1) program -> type ID LPAREN . RPAREN LBRACE statements RBRACE

    RPAREN          shift and go to state 7


state 7

    (1) program -> type ID LPAREN RPAREN . LBRACE statements RBRACE

    LBRACE          shift and go to state 8


state 8

    (1) program -> type ID LPAREN RPAREN LBRACE . statements RBRACE
    (4) statements -> . statement
    (5) statements -> . statement statements
    (6) statement -> . assignment
    (7) statement -> . return_statement
    (8) statement -> . if_statement
    (9) assignment -> . type ID EQUALS expression SEMICOLON
    (10) return_statement -> . RETURN expression SEMICOLON
    (11) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (12) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (2) type -> . INT
    (3) type -> . FLOAT

    RETURN          shift and go to state 15
    IF              shift and go to state 16
    INT             shift and go to state 3
    FLOAT           shift and go to state 4

    type                           shift and go to state 9
    statements                     shift and go to state 10
    statement                      shift and go to state 11
    assignment                     shift and go to state 12
    return_statement               shift and go to state 13
    if_statement                   shift and go to state 14

state 9

    (9) assignment -> type . ID EQUALS expression SEMICOLON

    ID              shift and go to state 17


state 10

    (1) program -> type ID LPAREN RPAREN LBRACE statements . RBRACE

    RBRACE          shift and go to state 18


state 11

    (4) statements -> statement .
    (5) statements -> statement . statements
    (4) statements -> . statement
    (5) statements -> . statement statements
    (6) statement -> . assignment
    (7) statement -> . return_statement
    (8) statement -> . if_statement
    (9) assignment -> . type ID EQUALS expression SEMICOLON
    (10) return_statement -> . RETURN expression SEMICOLON
    (11) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (12) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (2) type -> . INT
    (3) type -> . FLOAT

    RBRACE          reduce using rule 4 (statements -> statement .)
    RETURN          shift and go to state 15
    IF              shift and go to state 16
    INT             shift and go to state 3
    FLOAT           shift and go to state 4

    statement                      shift and go to state 11
    statements                     shift and go to state 19
    assignment                     shift and go to state 12
    return_statement               shift and go to state 13
    if_statement                   shift and go to state 14
    type                           shift and go to state 9

state 12

    (6) statement -> assignment .

    RETURN          reduce using rule 6 (statement -> assignment .)
    IF              reduce using rule 6 (statement -> assignment .)
    INT             reduce using rule 6 (statement -> assignment .)
    FLOAT           reduce using rule 6 (statement -> assignment .)
    RBRACE          reduce using rule 6 (statement -> assignment .)


state 13

    (7) statement -> return_statement .

    RETURN          reduce using rule 7 (statement -> return_statement .)
    IF              reduce using rule 7 (statement -> return_statement .)
    INT             reduce using rule 7 (statement -> return_statement .)
    FLOAT           reduce using rule 7 (statement -> return_statement .)
    RBRACE          reduce using rule 7 (statement -> return_statement .)


state 14

    (8) statement -> if_statement .

    RETURN          reduce using rule 8 (statement -> if_statement .)
    IF              reduce using rule 8 (statement -> if_statement .)
    INT             reduce using rule 8 (statement -> if_statement .)
    FLOAT           reduce using rule 8 (statement -> if_statement .)
    RBRACE          reduce using rule 8 (statement -> if_statement .)


state 15

    (10) return_statement -> RETURN . expression SEMICOLON
    (13) expression -> . ID
    (14) expression -> . INTEGER
    (15) expression -> . FLOAT
    (16) expression -> . expression LT expression
    (17) expression -> . expression LE expression
    (18) expression -> . expression GT expression
    (19) expression -> . expression GE expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NE expression

    ID              shift and go to state 21
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 23

    expression                     shift and go to state 20

state 16

    (11) if_statement -> IF . LPAREN expression RPAREN LBRACE statements RBRACE
    (12) if_statement -> IF . LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE

    LPAREN          shift and go to state 24


state 17

    (9) assignment -> type ID . EQUALS expression SEMICOLON

    EQUALS          shift and go to state 25


state 18

    (1) program -> type ID LPAREN RPAREN LBRACE statements RBRACE .

    $end            reduce using rule 1 (program -> type ID LPAREN RPAREN LBRACE statements RBRACE .)


state 19

    (5) statements -> statement statements .

    RBRACE          reduce using rule 5 (statements -> statement statements .)


state 20

    (10) return_statement -> RETURN expression . SEMICOLON
    (16) expression -> expression . LT expression
    (17) expression -> expression . LE expression
    (18) expression -> expression . GT expression
    (19) expression -> expression . GE expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NE expression

    SEMICOLON       shift and go to state 26
    LT              shift and go to state 27
    LE              shift and go to state 28
    GT              shift and go to state 29
    GE              shift and go to state 30
    EQ              shift and go to state 31
    NE              shift and go to state 32


state 21

    (13) expression -> ID .

    SEMICOLON       reduce using rule 13 (expression -> ID .)
    LT              reduce using rule 13 (expression -> ID .)
    LE              reduce using rule 13 (expression -> ID .)
    GT              reduce using rule 13 (expression -> ID .)
    GE              reduce using rule 13 (expression -> ID .)
    EQ              reduce using rule 13 (expression -> ID .)
    NE              reduce using rule 13 (expression -> ID .)
    RPAREN          reduce using rule 13 (expression -> ID .)


state 22

    (14) expression -> INTEGER .

    SEMICOLON       reduce using rule 14 (expression -> INTEGER .)
    LT              reduce using rule 14 (expression -> INTEGER .)
    LE              reduce using rule 14 (expression -> INTEGER .)
    GT              reduce using rule 14 (expression -> INTEGER .)
    GE              reduce using rule 14 (expression -> INTEGER .)
    EQ              reduce using rule 14 (expression -> INTEGER .)
    NE              reduce using rule 14 (expression -> INTEGER .)
    RPAREN          reduce using rule 14 (expression -> INTEGER .)


state 23

    (15) expression -> FLOAT .

    SEMICOLON       reduce using rule 15 (expression -> FLOAT .)
    LT              reduce using rule 15 (expression -> FLOAT .)
    LE              reduce using rule 15 (expression -> FLOAT .)
    GT              reduce using rule 15 (expression -> FLOAT .)
    GE              reduce using rule 15 (expression -> FLOAT .)
    EQ              reduce using rule 15 (expression -> FLOAT .)
    NE              reduce using rule 15 (expression -> FLOAT .)
    RPAREN          reduce using rule 15 (expression -> FLOAT .)


state 24

    (11) if_statement -> IF LPAREN . expression RPAREN LBRACE statements RBRACE
    (12) if_statement -> IF LPAREN . expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (13) expression -> . ID
    (14) expression -> . INTEGER
    (15) expression -> . FLOAT
    (16) expression -> . expression LT expression
    (17) expression -> . expression LE expression
    (18) expression -> . expression GT expression
    (19) expression -> . expression GE expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NE expression

    ID              shift and go to state 21
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 23

    expression                     shift and go to state 33

state 25

    (9) assignment -> type ID EQUALS . expression SEMICOLON
    (13) expression -> . ID
    (14) expression -> . INTEGER
    (15) expression -> . FLOAT
    (16) expression -> . expression LT expression
    (17) expression -> . expression LE expression
    (18) expression -> . expression GT expression
    (19) expression -> . expression GE expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NE expression

    ID              shift and go to state 21
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 23

    expression                     shift and go to state 34

state 26

    (10) return_statement -> RETURN expression SEMICOLON .

    RETURN          reduce using rule 10 (return_statement -> RETURN expression SEMICOLON .)
    IF              reduce using rule 10 (return_statement -> RETURN expression SEMICOLON .)
    INT             reduce using rule 10 (return_statement -> RETURN expression SEMICOLON .)
    FLOAT           reduce using rule 10 (return_statement -> RETURN expression SEMICOLON .)
    RBRACE          reduce using rule 10 (return_statement -> RETURN expression SEMICOLON .)


state 27

    (16) expression -> expression LT . expression
    (13) expression -> . ID
    (14) expression -> . INTEGER
    (15) expression -> . FLOAT
    (16) expression -> . expression LT expression
    (17) expression -> . expression LE expression
    (18) expression -> . expression GT expression
    (19) expression -> . expression GE expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NE expression

    ID              shift and go to state 21
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 23

    expression                     shift and go to state 35

state 28

    (17) expression -> expression LE . expression
    (13) expression -> . ID
    (14) expression -> . INTEGER
    (15) expression -> . FLOAT
    (16) expression -> . expression LT expression
    (17) expression -> . expression LE expression
    (18) expression -> . expression GT expression
    (19) expression -> . expression GE expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NE expression

    ID              shift and go to state 21
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 23

    expression                     shift and go to state 36

state 29

    (18) expression -> expression GT . expression
    (13) expression -> . ID
    (14) expression -> . INTEGER
    (15) expression -> . FLOAT
    (16) expression -> . expression LT expression
    (17) expression -> . expression LE expression
    (18) expression -> . expression GT expression
    (19) expression -> . expression GE expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NE expression

    ID              shift and go to state 21
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 23

    expression                     shift and go to state 37

state 30

    (19) expression -> expression GE . expression
    (13) expression -> . ID
    (14) expression -> . INTEGER
    (15) expression -> . FLOAT
    (16) expression -> . expression LT expression
    (17) expression -> . expression LE expression
    (18) expression -> . expression GT expression
    (19) expression -> . expression GE expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NE expression

    ID              shift and go to state 21
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 23

    expression                     shift and go to state 38

state 31

    (20) expression -> expression EQ . expression
    (13) expression -> . ID
    (14) expression -> . INTEGER
    (15) expression -> . FLOAT
    (16) expression -> . expression LT expression
    (17) expression -> . expression LE expression
    (18) expression -> . expression GT expression
    (19) expression -> . expression GE expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NE expression

    ID              shift and go to state 21
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 23

    expression                     shift and go to state 39

state 32

    (21) expression -> expression NE . expression
    (13) expression -> . ID
    (14) expression -> . INTEGER
    (15) expression -> . FLOAT
    (16) expression -> . expression LT expression
    (17) expression -> . expression LE expression
    (18) expression -> . expression GT expression
    (19) expression -> . expression GE expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NE expression

    ID              shift and go to state 21
    INTEGER         shift and go to state 22
    FLOAT           shift and go to state 23

    expression                     shift and go to state 40

state 33

    (11) if_statement -> IF LPAREN expression . RPAREN LBRACE statements RBRACE
    (12) if_statement -> IF LPAREN expression . RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (16) expression -> expression . LT expression
    (17) expression -> expression . LE expression
    (18) expression -> expression . GT expression
    (19) expression -> expression . GE expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NE expression

    RPAREN          shift and go to state 41
    LT              shift and go to state 27
    LE              shift and go to state 28
    GT              shift and go to state 29
    GE              shift and go to state 30
    EQ              shift and go to state 31
    NE              shift and go to state 32


state 34

    (9) assignment -> type ID EQUALS expression . SEMICOLON
    (16) expression -> expression . LT expression
    (17) expression -> expression . LE expression
    (18) expression -> expression . GT expression
    (19) expression -> expression . GE expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NE expression

    SEMICOLON       shift and go to state 42
    LT              shift and go to state 27
    LE              shift and go to state 28
    GT              shift and go to state 29
    GE              shift and go to state 30
    EQ              shift and go to state 31
    NE              shift and go to state 32


state 35

    (16) expression -> expression LT expression .
    (16) expression -> expression . LT expression
    (17) expression -> expression . LE expression
    (18) expression -> expression . GT expression
    (19) expression -> expression . GE expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NE expression

  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    SEMICOLON       reduce using rule 16 (expression -> expression LT expression .)
    RPAREN          reduce using rule 16 (expression -> expression LT expression .)
    LT              shift and go to state 27
    LE              shift and go to state 28
    GT              shift and go to state 29
    GE              shift and go to state 30
    EQ              shift and go to state 31
    NE              shift and go to state 32

  ! LT              [ reduce using rule 16 (expression -> expression LT expression .) ]
  ! LE              [ reduce using rule 16 (expression -> expression LT expression .) ]
  ! GT              [ reduce using rule 16 (expression -> expression LT expression .) ]
  ! GE              [ reduce using rule 16 (expression -> expression LT expression .) ]
  ! EQ              [ reduce using rule 16 (expression -> expression LT expression .) ]
  ! NE              [ reduce using rule 16 (expression -> expression LT expression .) ]


state 36

    (17) expression -> expression LE expression .
    (16) expression -> expression . LT expression
    (17) expression -> expression . LE expression
    (18) expression -> expression . GT expression
    (19) expression -> expression . GE expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NE expression

  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    SEMICOLON       reduce using rule 17 (expression -> expression LE expression .)
    RPAREN          reduce using rule 17 (expression -> expression LE expression .)
    LT              shift and go to state 27
    LE              shift and go to state 28
    GT              shift and go to state 29
    GE              shift and go to state 30
    EQ              shift and go to state 31
    NE              shift and go to state 32

  ! LT              [ reduce using rule 17 (expression -> expression LE expression .) ]
  ! LE              [ reduce using rule 17 (expression -> expression LE expression .) ]
  ! GT              [ reduce using rule 17 (expression -> expression LE expression .) ]
  ! GE              [ reduce using rule 17 (expression -> expression LE expression .) ]
  ! EQ              [ reduce using rule 17 (expression -> expression LE expression .) ]
  ! NE              [ reduce using rule 17 (expression -> expression LE expression .) ]


state 37

    (18) expression -> expression GT expression .
    (16) expression -> expression . LT expression
    (17) expression -> expression . LE expression
    (18) expression -> expression . GT expression
    (19) expression -> expression . GE expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NE expression

  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    SEMICOLON       reduce using rule 18 (expression -> expression GT expression .)
    RPAREN          reduce using rule 18 (expression -> expression GT expression .)
    LT              shift and go to state 27
    LE              shift and go to state 28
    GT              shift and go to state 29
    GE              shift and go to state 30
    EQ              shift and go to state 31
    NE              shift and go to state 32

  ! LT              [ reduce using rule 18 (expression -> expression GT expression .) ]
  ! LE              [ reduce using rule 18 (expression -> expression GT expression .) ]
  ! GT              [ reduce using rule 18 (expression -> expression GT expression .) ]
  ! GE              [ reduce using rule 18 (expression -> expression GT expression .) ]
  ! EQ              [ reduce using rule 18 (expression -> expression GT expression .) ]
  ! NE              [ reduce using rule 18 (expression -> expression GT expression .) ]


state 38

    (19) expression -> expression GE expression .
    (16) expression -> expression . LT expression
    (17) expression -> expression . LE expression
    (18) expression -> expression . GT expression
    (19) expression -> expression . GE expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NE expression

  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    SEMICOLON       reduce using rule 19 (expression -> expression GE expression .)
    RPAREN          reduce using rule 19 (expression -> expression GE expression .)
    LT              shift and go to state 27
    LE              shift and go to state 28
    GT              shift and go to state 29
    GE              shift and go to state 30
    EQ              shift and go to state 31
    NE              shift and go to state 32

  ! LT              [ reduce using rule 19 (expression -> expression GE expression .) ]
  ! LE              [ reduce using rule 19 (expression -> expression GE expression .) ]
  ! GT              [ reduce using rule 19 (expression -> expression GE expression .) ]
  ! GE              [ reduce using rule 19 (expression -> expression GE expression .) ]
  ! EQ              [ reduce using rule 19 (expression -> expression GE expression .) ]
  ! NE              [ reduce using rule 19 (expression -> expression GE expression .) ]


state 39

    (20) expression -> expression EQ expression .
    (16) expression -> expression . LT expression
    (17) expression -> expression . LE expression
    (18) expression -> expression . GT expression
    (19) expression -> expression . GE expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NE expression

  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    SEMICOLON       reduce using rule 20 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 20 (expression -> expression EQ expression .)
    LT              shift and go to state 27
    LE              shift and go to state 28
    GT              shift and go to state 29
    GE              shift and go to state 30
    EQ              shift and go to state 31
    NE              shift and go to state 32

  ! LT              [ reduce using rule 20 (expression -> expression EQ expression .) ]
  ! LE              [ reduce using rule 20 (expression -> expression EQ expression .) ]
  ! GT              [ reduce using rule 20 (expression -> expression EQ expression .) ]
  ! GE              [ reduce using rule 20 (expression -> expression EQ expression .) ]
  ! EQ              [ reduce using rule 20 (expression -> expression EQ expression .) ]
  ! NE              [ reduce using rule 20 (expression -> expression EQ expression .) ]


state 40

    (21) expression -> expression NE expression .
    (16) expression -> expression . LT expression
    (17) expression -> expression . LE expression
    (18) expression -> expression . GT expression
    (19) expression -> expression . GE expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NE expression

  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    SEMICOLON       reduce using rule 21 (expression -> expression NE expression .)
    RPAREN          reduce using rule 21 (expression -> expression NE expression .)
    LT              shift and go to state 27
    LE              shift and go to state 28
    GT              shift and go to state 29
    GE              shift and go to state 30
    EQ              shift and go to state 31
    NE              shift and go to state 32

  ! LT              [ reduce using rule 21 (expression -> expression NE expression .) ]
  ! LE              [ reduce using rule 21 (expression -> expression NE expression .) ]
  ! GT              [ reduce using rule 21 (expression -> expression NE expression .) ]
  ! GE              [ reduce using rule 21 (expression -> expression NE expression .) ]
  ! EQ              [ reduce using rule 21 (expression -> expression NE expression .) ]
  ! NE              [ reduce using rule 21 (expression -> expression NE expression .) ]


state 41

    (11) if_statement -> IF LPAREN expression RPAREN . LBRACE statements RBRACE
    (12) if_statement -> IF LPAREN expression RPAREN . LBRACE statements RBRACE ELSE LBRACE statements RBRACE

    LBRACE          shift and go to state 43


state 42

    (9) assignment -> type ID EQUALS expression SEMICOLON .

    RETURN          reduce using rule 9 (assignment -> type ID EQUALS expression SEMICOLON .)
    IF              reduce using rule 9 (assignment -> type ID EQUALS expression SEMICOLON .)
    INT             reduce using rule 9 (assignment -> type ID EQUALS expression SEMICOLON .)
    FLOAT           reduce using rule 9 (assignment -> type ID EQUALS expression SEMICOLON .)
    RBRACE          reduce using rule 9 (assignment -> type ID EQUALS expression SEMICOLON .)


state 43

    (11) if_statement -> IF LPAREN expression RPAREN LBRACE . statements RBRACE
    (12) if_statement -> IF LPAREN expression RPAREN LBRACE . statements RBRACE ELSE LBRACE statements RBRACE
    (4) statements -> . statement
    (5) statements -> . statement statements
    (6) statement -> . assignment
    (7) statement -> . return_statement
    (8) statement -> . if_statement
    (9) assignment -> . type ID EQUALS expression SEMICOLON
    (10) return_statement -> . RETURN expression SEMICOLON
    (11) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (12) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (2) type -> . INT
    (3) type -> . FLOAT

    RETURN          shift and go to state 15
    IF              shift and go to state 16
    INT             shift and go to state 3
    FLOAT           shift and go to state 4

    statements                     shift and go to state 44
    statement                      shift and go to state 11
    assignment                     shift and go to state 12
    return_statement               shift and go to state 13
    if_statement                   shift and go to state 14
    type                           shift and go to state 9

state 44

    (11) if_statement -> IF LPAREN expression RPAREN LBRACE statements . RBRACE
    (12) if_statement -> IF LPAREN expression RPAREN LBRACE statements . RBRACE ELSE LBRACE statements RBRACE

    RBRACE          shift and go to state 45


state 45

    (11) if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .
    (12) if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE . ELSE LBRACE statements RBRACE

    RETURN          reduce using rule 11 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    IF              reduce using rule 11 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    INT             reduce using rule 11 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    FLOAT           reduce using rule 11 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    RBRACE          reduce using rule 11 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE .)
    ELSE            shift and go to state 46


state 46

    (12) if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE . LBRACE statements RBRACE

    LBRACE          shift and go to state 47


state 47

    (12) if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE . statements RBRACE
    (4) statements -> . statement
    (5) statements -> . statement statements
    (6) statement -> . assignment
    (7) statement -> . return_statement
    (8) statement -> . if_statement
    (9) assignment -> . type ID EQUALS expression SEMICOLON
    (10) return_statement -> . RETURN expression SEMICOLON
    (11) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE
    (12) if_statement -> . IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE
    (2) type -> . INT
    (3) type -> . FLOAT

    RETURN          shift and go to state 15
    IF              shift and go to state 16
    INT             shift and go to state 3
    FLOAT           shift and go to state 4

    statements                     shift and go to state 48
    statement                      shift and go to state 11
    assignment                     shift and go to state 12
    return_statement               shift and go to state 13
    if_statement                   shift and go to state 14
    type                           shift and go to state 9

state 48

    (12) if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements . RBRACE

    RBRACE          shift and go to state 49


state 49

    (12) if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .

    RETURN          reduce using rule 12 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    IF              reduce using rule 12 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    INT             reduce using rule 12 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    FLOAT           reduce using rule 12 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)
    RBRACE          reduce using rule 12 (if_statement -> IF LPAREN expression RPAREN LBRACE statements RBRACE ELSE LBRACE statements RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LT in state 35 resolved as shift
WARNING: shift/reduce conflict for LE in state 35 resolved as shift
WARNING: shift/reduce conflict for GT in state 35 resolved as shift
WARNING: shift/reduce conflict for GE in state 35 resolved as shift
WARNING: shift/reduce conflict for EQ in state 35 resolved as shift
WARNING: shift/reduce conflict for NE in state 35 resolved as shift
WARNING: shift/reduce conflict for LT in state 36 resolved as shift
WARNING: shift/reduce conflict for LE in state 36 resolved as shift
WARNING: shift/reduce conflict for GT in state 36 resolved as shift
WARNING: shift/reduce conflict for GE in state 36 resolved as shift
WARNING: shift/reduce conflict for EQ in state 36 resolved as shift
WARNING: shift/reduce conflict for NE in state 36 resolved as shift
WARNING: shift/reduce conflict for LT in state 37 resolved as shift
WARNING: shift/reduce conflict for LE in state 37 resolved as shift
WARNING: shift/reduce conflict for GT in state 37 resolved as shift
WARNING: shift/reduce conflict for GE in state 37 resolved as shift
WARNING: shift/reduce conflict for EQ in state 37 resolved as shift
WARNING: shift/reduce conflict for NE in state 37 resolved as shift
WARNING: shift/reduce conflict for LT in state 38 resolved as shift
WARNING: shift/reduce conflict for LE in state 38 resolved as shift
WARNING: shift/reduce conflict for GT in state 38 resolved as shift
WARNING: shift/reduce conflict for GE in state 38 resolved as shift
WARNING: shift/reduce conflict for EQ in state 38 resolved as shift
WARNING: shift/reduce conflict for NE in state 38 resolved as shift
WARNING: shift/reduce conflict for LT in state 39 resolved as shift
WARNING: shift/reduce conflict for LE in state 39 resolved as shift
WARNING: shift/reduce conflict for GT in state 39 resolved as shift
WARNING: shift/reduce conflict for GE in state 39 resolved as shift
WARNING: shift/reduce conflict for EQ in state 39 resolved as shift
WARNING: shift/reduce conflict for NE in state 39 resolved as shift
WARNING: shift/reduce conflict for LT in state 40 resolved as shift
WARNING: shift/reduce conflict for LE in state 40 resolved as shift
WARNING: shift/reduce conflict for GT in state 40 resolved as shift
WARNING: shift/reduce conflict for GE in state 40 resolved as shift
WARNING: shift/reduce conflict for EQ in state 40 resolved as shift
WARNING: shift/reduce conflict for NE in state 40 resolved as shift
