Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    LPAREN
    RPAREN

Grammar

Rule 0     S' -> program
Rule 1     program -> INT declarations statements
Rule 2     declarations -> declarations declaration
Rule 3     declarations -> declaration
Rule 4     declaration -> INT ID SEMICOLON
Rule 5     statements -> statements statement
Rule 6     statements -> statement
Rule 7     statement -> ID EQUALS expression SEMICOLON
Rule 8     expression -> expression PLUS expression
Rule 9     expression -> expression MINUS expression
Rule 10    expression -> expression TIMES expression
Rule 11    expression -> expression DIVIDE expression
Rule 12    expression -> INTEGER

Terminals, with rules where they appear

DIVIDE               : 11
EQUALS               : 7
ID                   : 4 7
INT                  : 1 4
INTEGER              : 12
LPAREN               : 
MINUS                : 9
PLUS                 : 8
RPAREN               : 
SEMICOLON            : 4 7
TIMES                : 10
error                : 

Nonterminals, with rules where they appear

declaration          : 2 3
declarations         : 1 2
expression           : 7 8 8 9 9 10 10 11 11
program              : 0
statement            : 5 6
statements           : 1 5

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . INT declarations statements

    INT             shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> INT . declarations statements
    (2) declarations -> . declarations declaration
    (3) declarations -> . declaration
    (4) declaration -> . INT ID SEMICOLON

    INT             shift and go to state 3

    declarations                   shift and go to state 4
    declaration                    shift and go to state 5

state 3

    (4) declaration -> INT . ID SEMICOLON

    ID              shift and go to state 6


state 4

    (1) program -> INT declarations . statements
    (2) declarations -> declarations . declaration
    (5) statements -> . statements statement
    (6) statements -> . statement
    (4) declaration -> . INT ID SEMICOLON
    (7) statement -> . ID EQUALS expression SEMICOLON

    INT             shift and go to state 3
    ID              shift and go to state 10

    statements                     shift and go to state 7
    declaration                    shift and go to state 8
    statement                      shift and go to state 9

state 5

    (3) declarations -> declaration .

    INT             reduce using rule 3 (declarations -> declaration .)
    ID              reduce using rule 3 (declarations -> declaration .)


state 6

    (4) declaration -> INT ID . SEMICOLON

    SEMICOLON       shift and go to state 11


state 7

    (1) program -> INT declarations statements .
    (5) statements -> statements . statement
    (7) statement -> . ID EQUALS expression SEMICOLON

    $end            reduce using rule 1 (program -> INT declarations statements .)
    ID              shift and go to state 10

    statement                      shift and go to state 12

state 8

    (2) declarations -> declarations declaration .

    INT             reduce using rule 2 (declarations -> declarations declaration .)
    ID              reduce using rule 2 (declarations -> declarations declaration .)


state 9

    (6) statements -> statement .

    ID              reduce using rule 6 (statements -> statement .)
    $end            reduce using rule 6 (statements -> statement .)


state 10

    (7) statement -> ID . EQUALS expression SEMICOLON

    EQUALS          shift and go to state 13


state 11

    (4) declaration -> INT ID SEMICOLON .

    INT             reduce using rule 4 (declaration -> INT ID SEMICOLON .)
    ID              reduce using rule 4 (declaration -> INT ID SEMICOLON .)


state 12

    (5) statements -> statements statement .

    ID              reduce using rule 5 (statements -> statements statement .)
    $end            reduce using rule 5 (statements -> statements statement .)


state 13

    (7) statement -> ID EQUALS . expression SEMICOLON
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression TIMES expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . INTEGER

    INTEGER         shift and go to state 15

    expression                     shift and go to state 14

state 14

    (7) statement -> ID EQUALS expression . SEMICOLON
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . TIMES expression
    (11) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 16
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20


state 15

    (12) expression -> INTEGER .

    SEMICOLON       reduce using rule 12 (expression -> INTEGER .)
    PLUS            reduce using rule 12 (expression -> INTEGER .)
    MINUS           reduce using rule 12 (expression -> INTEGER .)
    TIMES           reduce using rule 12 (expression -> INTEGER .)
    DIVIDE          reduce using rule 12 (expression -> INTEGER .)


state 16

    (7) statement -> ID EQUALS expression SEMICOLON .

    ID              reduce using rule 7 (statement -> ID EQUALS expression SEMICOLON .)
    $end            reduce using rule 7 (statement -> ID EQUALS expression SEMICOLON .)


state 17

    (8) expression -> expression PLUS . expression
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression TIMES expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . INTEGER

    INTEGER         shift and go to state 15

    expression                     shift and go to state 21

state 18

    (9) expression -> expression MINUS . expression
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression TIMES expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . INTEGER

    INTEGER         shift and go to state 15

    expression                     shift and go to state 22

state 19

    (10) expression -> expression TIMES . expression
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression TIMES expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . INTEGER

    INTEGER         shift and go to state 15

    expression                     shift and go to state 23

state 20

    (11) expression -> expression DIVIDE . expression
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression TIMES expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . INTEGER

    INTEGER         shift and go to state 15

    expression                     shift and go to state 24

state 21

    (8) expression -> expression PLUS expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . TIMES expression
    (11) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMICOLON       reduce using rule 8 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20

  ! PLUS            [ reduce using rule 8 (expression -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 8 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 8 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 8 (expression -> expression PLUS expression .) ]


state 22

    (9) expression -> expression MINUS expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . TIMES expression
    (11) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMICOLON       reduce using rule 9 (expression -> expression MINUS expression .)
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20

  ! PLUS            [ reduce using rule 9 (expression -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 9 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 9 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 9 (expression -> expression MINUS expression .) ]


state 23

    (10) expression -> expression TIMES expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . TIMES expression
    (11) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMICOLON       reduce using rule 10 (expression -> expression TIMES expression .)
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20

  ! PLUS            [ reduce using rule 10 (expression -> expression TIMES expression .) ]
  ! MINUS           [ reduce using rule 10 (expression -> expression TIMES expression .) ]
  ! TIMES           [ reduce using rule 10 (expression -> expression TIMES expression .) ]
  ! DIVIDE          [ reduce using rule 10 (expression -> expression TIMES expression .) ]


state 24

    (11) expression -> expression DIVIDE expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . TIMES expression
    (11) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    SEMICOLON       reduce using rule 11 (expression -> expression DIVIDE expression .)
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20

  ! PLUS            [ reduce using rule 11 (expression -> expression DIVIDE expression .) ]
  ! MINUS           [ reduce using rule 11 (expression -> expression DIVIDE expression .) ]
  ! TIMES           [ reduce using rule 11 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE          [ reduce using rule 11 (expression -> expression DIVIDE expression .) ]

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 21 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 21 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 21 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 21 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 22 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 22 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 22 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 22 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 23 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 23 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 23 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 23 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 24 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 24 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 24 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 24 resolved as shift
